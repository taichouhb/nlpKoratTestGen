/*
 * This file was automatically generated by EvoSuite
 * Tue May 01 00:38:59 GMT 2018
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.EmptyStackException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Tower_ESTest extends Tower_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Tower tower0 = new Tower(719);
      assertNotNull(tower0);
      assertEquals(719, tower0.index());
      
      tower0.add(3501);
      assertEquals(719, tower0.index());
      
      tower0.add(571);
      assertEquals(719, tower0.index());
      
      int int0 = (-1);
      Tower tower1 = new Tower((-1771));
      assertFalse(tower1.equals((Object)tower0));
      assertNotNull(tower1);
      assertEquals((-1771), tower1.index());
      
      tower1.moveDisks((-1), tower0, tower0);
      assertNotSame(tower0, tower1);
      assertNotSame(tower1, tower0);
      assertFalse(tower0.equals((Object)tower1));
      assertFalse(tower1.equals((Object)tower0));
      assertEquals(719, tower0.index());
      assertEquals((-1771), tower1.index());
      
      tower1.add(571);
      assertNotSame(tower1, tower0);
      assertFalse(tower1.equals((Object)tower0));
      assertEquals((-1771), tower1.index());
      
      tower0.moveDisks((-1), tower1, tower1);
      assertNotSame(tower0, tower1);
      assertNotSame(tower1, tower0);
      assertFalse(tower0.equals((Object)tower1));
      assertFalse(tower1.equals((Object)tower0));
      assertEquals(719, tower0.index());
      assertEquals((-1771), tower1.index());
      
      tower0.add((-1));
      assertNotSame(tower0, tower1);
      assertFalse(tower0.equals((Object)tower1));
      assertEquals(719, tower0.index());
      
      int int1 = tower0.index();
      assertNotSame(tower0, tower1);
      assertFalse(tower0.equals((Object)tower1));
      assertFalse(int1 == int0);
      assertEquals(719, int1);
      assertEquals(719, tower0.index());
      
      tower1.add((-1));
      assertNotSame(tower1, tower0);
      assertFalse(tower1.equals((Object)tower0));
      assertEquals((-1771), tower1.index());
      
      tower0.moveTopTo(tower1);
      assertNotSame(tower0, tower1);
      assertNotSame(tower1, tower0);
      assertFalse(tower0.equals((Object)tower1));
      assertFalse(tower1.equals((Object)tower0));
      assertEquals(719, tower0.index());
      assertEquals((-1771), tower1.index());
      
      // Undeclared exception!
      try { 
        tower1.moveDisks(637, tower0, tower0);
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Tower tower0 = new Tower((-1));
      assertNotNull(tower0);
      assertEquals((-1), tower0.index());
      
      int int0 = (-6272);
      tower0.add(0);
      assertEquals((-1), tower0.index());
      
      tower0.add((-6272));
      assertEquals((-1), tower0.index());
      
      Tower tower1 = null;
      // Undeclared exception!
      try { 
        tower0.moveDisks(1, (Tower) null, (Tower) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Tower", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = (-4359);
      Tower tower0 = new Tower((-4359));
      assertNotNull(tower0);
      assertEquals((-4359), tower0.index());
      
      tower0.add((-4359));
      assertEquals((-4359), tower0.index());
      
      Tower tower1 = null;
      // Undeclared exception!
      try { 
        tower0.moveTopTo((Tower) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Tower", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Tower tower0 = new Tower(1);
      assertNotNull(tower0);
      assertEquals(1, tower0.index());
      
      Tower tower1 = new Tower(1);
      assertFalse(tower1.equals((Object)tower0));
      assertNotNull(tower1);
      assertEquals(1, tower1.index());
      
      // Undeclared exception!
      try { 
        tower0.moveDisks(1, tower1, tower1);
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Tower tower0 = new Tower((-4526));
      assertNotNull(tower0);
      assertEquals((-4526), tower0.index());
      
      int int0 = (-974);
      Tower tower1 = new Tower((-4526));
      assertFalse(tower1.equals((Object)tower0));
      assertNotNull(tower1);
      assertEquals((-4526), tower1.index());
      
      // Undeclared exception!
      try { 
        tower1.moveTopTo(tower0);
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int int0 = 4336;
      Tower tower0 = new Tower(4336);
      assertNotNull(tower0);
      assertEquals(4336, tower0.index());
      
      int int1 = 0;
      Tower tower1 = new Tower(0);
      assertFalse(tower1.equals((Object)tower0));
      assertNotNull(tower1);
      assertEquals(0, tower1.index());
      
      // Undeclared exception!
      try { 
        tower0.moveTopTo(tower1);
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Tower tower0 = new Tower(0);
      assertNotNull(tower0);
      assertEquals(0, tower0.index());
      
      int int0 = (-748);
      Tower tower1 = new Tower(1);
      assertFalse(tower1.equals((Object)tower0));
      assertNotNull(tower1);
      assertEquals(1, tower1.index());
      
      Tower tower2 = new Tower(0);
      assertFalse(tower2.equals((Object)tower1));
      assertFalse(tower2.equals((Object)tower0));
      assertNotNull(tower2);
      assertEquals(0, tower2.index());
      
      // Undeclared exception!
      try { 
        tower1.moveTopTo(tower2);
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Tower tower0 = new Tower(1);
      int int0 = 214;
      tower0.add(1);
      Tower tower1 = new Tower(214);
      tower0.moveDisks(1, tower1, tower1);
      Tower tower2 = new Tower(1);
      tower2.add(0);
      tower0.moveDisks(0, tower2, tower2);
      tower0.index();
      Tower tower3 = new Tower(1234);
      tower1.moveDisks(0, tower2, tower3);
      Tower tower4 = new Tower(1);
      // Undeclared exception!
      try { 
        tower0.moveTopTo(tower4);
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int int0 = 1;
      Tower tower0 = new Tower(1);
      int int1 = 0;
      int int2 = (-1869);
      Tower tower1 = new Tower((-1869));
      // Undeclared exception!
      try { 
        tower0.moveTopTo(tower1);
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = 1;
      Tower tower0 = new Tower(1);
      Tower tower1 = new Tower(1);
      // Undeclared exception!
      try { 
        tower0.moveDisks(1, tower1, tower1);
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Tower tower0 = new Tower(0);
      tower0.index();
      tower0.add(0);
      tower0.add((-668));
      Tower tower1 = new Tower((-897));
      tower0.moveDisks((-668), tower1, tower1);
      assertEquals((-897), tower1.index());
      assertEquals(0, tower0.index());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Tower tower0 = new Tower((-501));
      tower0.add(0);
      tower0.add(0);
      tower0.index();
      Tower tower1 = new Tower(1);
      tower0.add(1578);
      tower1.add(0);
      tower0.moveTopTo(tower1);
      tower0.moveDisks((-501), tower1, tower1);
      tower0.moveDisks((-841), tower1, tower1);
      tower1.moveTopTo(tower0);
      Tower tower2 = new Tower(1);
      tower2.add(0);
      // Undeclared exception!
      try { 
        tower1.moveTopTo(tower2);
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = 660;
      Tower tower0 = new Tower(660);
      int int1 = 661;
      Tower tower1 = new Tower(660);
      tower1.add(661);
      // Undeclared exception!
      try { 
        tower0.moveDisks(178, tower1, tower1);
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = 0;
      Tower tower0 = new Tower(0);
      int int1 = (-1);
      tower0.add((-1));
      Tower tower1 = new Tower(0);
      tower0.moveTopTo(tower1);
      Tower tower2 = new Tower(0);
      tower2.add(0);
      // Undeclared exception!
      try { 
        tower0.moveTopTo(tower2);
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }
}
